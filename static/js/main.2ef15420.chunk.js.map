{"version":3,"sources":["components/SpotifyAuth.js","hooks/useData.js","components/GoalUpdate.js","components/GoalsListItem.js","components/GoalsList.js","components/Goals.js","components/GamifyModal.js","components/Nav.js","components/SkillBarList.js","components/SidePanel.js","components/Quotes.js","components/GamifyUser.js","components/Header.js","components/GamifyLogin.js","components/BattleTheme.js","components/SelectTheme.js","App.js","reportWebVitals.js","index.js"],"names":["SpotifyAuth","id","className","href","rel","src","alt","hasFetchedData","state","updaters","setState","newState","forEach","updater","useData","newUpdater","useState","useEffect","push","filter","Promise","all","axios","get","then","userExp","data","userStrength","userVitality","userKnowledge","userSocial","userWillpower","token","access_token","dailyGoals","goals","missionGoals","questGoals","quote","shuffleQuote","res","createGoal","formData","method","url","headers","JSON","stringify","goalTypeKey","goal","goalType","length","console","log","err","updateGoalStatus","status","goalId","newStatus","goalKey","i","updatedArray","updateGoal","update","name","goalName","attr","goalAttribute","toLowerCase","foundGoal","updatedGoal","findGoal","oldGoalArr","newGoalArr","splice","checkTypes","deleteGoal","updatedGoalArr","updateUserStats","attributesToIncrement","updateData","userId","Exp","Strength","Vitality","Knowledge","Social","Willpower","el","key","charAt","toUpperCase","slice","updateLogin","GoalUpdate","reCollapse","setGoal","formEl","useRef","current","querySelectorAll","window","RPGUI","type","dataset","rpgui","create","onSubmit","event","preventDefault","updateInformation","target","value","checked","ref","autoComplete","onChange","e","maxLength","onClick","GoalsListItem","title","goalDescription","open","setOpen","statusIcon","completedGoal","style","textDecoration","textDecorationThickness","textDecorationColor","class","Collapse","in","GoalsList","props","goalList","map","headerName","Goals","GamifyModal","handleClose","rows","cols","placeholder","Nav","show","setShow","Modal","SkillBarList","strengthVal","strengthLvl","Math","floor","vitalityVal","vitalityLvl","knowledgeVal","knowledgeLvl","socialVal","socialLvl","willpowerVal","willpowerLvl","width","SidePanel","Quotes","minHeight","dimension","Card","body","q","a","GamifyUser","displayExp","exp","displayLvl","Header","GamifyLogin","email","setEmail","password","setPassword","Button","Form","currentTarget","checkValidity","stopPropagation","Group","size","controlId","Label","Text","muted","disabled","BattleTheme","setTheme","theme","uri","setUri","getUri","autoPlay","uris","play","showSaveIcon","initialVolume","styles","bgColor","activeColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","SelectTheme","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.2ef15420.chunk.js","sourcesContent":["import \"./SpotifyAuth.scss\";\n\nexport default function SpotifyAuth() {\n  return (\n    <footer id='spotify-auth'>\n      <div className='rpgui-content'>\n        <div className='rpgui-container framed spotify-content'>\n          <header className='spotify-auth-header'>\n            <a\n              className='btn-spotify'\n              href='http://localhost:5000/login'\n              rel='noopener noreferrer'\n            >\n              <img src='/spotify-icon-white.png' alt='' />\n              Login with Spotify\n            </a>\n          </header>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n// const ObjectId = require(\"mongodb\").ObjectID;\n\n//Boolen, cause State to be set on original load.\nlet hasFetchedData = false;\n//Original state before load.\nlet state = {};\n//Do not change updaters\nlet updaters = [];\n//Do not export setState -> call if form another function in the file.\n//setState is expecting an object.\nconst setState = (newState) => {\n  state = {\n    ...state,\n    ...newState,\n  };\n\n  updaters.forEach((updater) => {\n    updater(state);\n  });\n};\n//TO DO? logout func to set state to null.\nexport default function useData() {\n  const newUpdater = useState()[1];\n  useEffect(() => {\n    updaters.push(newUpdater);\n    return () => {\n      updaters = updaters.filter((updater) => updater !== newUpdater);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!hasFetchedData) {\n      hasFetchedData = true;\n      Promise.all([\n        axios.get(\"http://localhost:5000/db/db-user\"),\n        axios.get(\"http://localhost:5000/auth/token\"),\n        axios.get(\"http://localhost:5000/db/daily-goals\"),\n        axios.get(\"http://localhost:5000/db/mission-goals\"),\n        axios.get(\"http://localhost:5000/db/quest-goals\"),\n        axios.get(\"http://localhost:5000/quote\"),\n      ]).then((all) => {\n        setState({\n          //See updateLogin below\n          // userId: all[0].data.data.userId,\n          userExp: all[0].data.data.userExp,\n          userStrength: all[0].data.data.userStrength,\n          userVitality: all[0].data.data.userVitality,\n          userKnowledge: all[0].data.data.userKnowledge,\n          userSocial: all[0].data.data.userSocial,\n          userWillpower: all[0].data.data.userWillpower,\n          token: all[1].data.access_token,\n          dailyGoals: all[2].data.goals,\n          missionGoals: all[3].data.goals,\n          questGoals: all[4].data.goals,\n          quote: all[5].data.quote,\n        });\n      });\n    }\n  }, []);\n\n  const shuffleQuote = () => {\n    axios.get(\"http://localhost:5000/quote\").then((res) => {\n      setState({\n        quote: res.data.quote,\n      });\n    });\n  };\n\n  function createGoal(formData) {\n    //Update db with new goal\n    axios({\n      method: \"post\",\n      url: \"/db/new-goal\",\n      headers: { \"content-type\": \"application/json\" },\n      data: JSON.stringify(formData),\n    }).then(\n      (res) => {\n        //Update state to match db\n        const goalTypeKey = `${res.data.goal.goalType}Goals`;\n\n        if (state[goalTypeKey] === -1 || state[goalTypeKey].length === null) {\n          console.log(`===${state[goalTypeKey]}`);\n          //If there are no existing goals of this tpye:\n          setState({\n            [goalTypeKey]: [res.data.goal],\n          });\n        } else {\n          console.log(`===${state[goalTypeKey]}`);\n          setState({\n            [goalTypeKey]: [...state[goalTypeKey], res.data.goal],\n          });\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  function updateGoalStatus(data) {\n    //Update db with new status.\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/db/update-goal-status\",\n      headers: { \"content-type\": \"application/json\" },\n      data: JSON.stringify(data),\n    }).then(\n      (res) => {\n        const id = res.data.status.goalId;\n        const newStatus = res.data.status.status;\n        const goalKey = `${data.goalType}Goals`;\n\n        //iterate through list of goals\n        for (let i = 0; i < state[goalKey].length; i++) {\n          //find the correct goal (goalId)\n          if (state[goalKey][i].goalId === id) {\n            const updatedArray = [...state[goalKey]];\n            updatedArray[i].status = newStatus;\n            setState({\n              goalKey: updatedArray,\n            });\n          }\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  function updateGoal(data) {\n    axios({\n      method: \"put\",\n      url: \"http://localhost:5000/db/update-goal\",\n      headers: { \"content-type\": \"application/json\" },\n      data: JSON.stringify(data),\n    }).then((res) => {\n      console.log(res.data.update);\n      const id = res.data.update.goalId;\n      const name = res.data.update.goalName;\n      const attr = res.data.update.goalAttribute;\n      const goalKey = `${res.data.update.goalType.toLowerCase()}Goals`;\n      let foundGoal = false;\n\n      ////////GOAL TYPE REMAINS THE SAME////////\n      for (let i = 0; i < state[goalKey].length; i++) {\n        if (state[goalKey][i].goalId === id) {\n          foundGoal = true;\n          //Update existing state with info returned from db update.\n          const updatedGoal = [...state[goalKey]];\n          updatedGoal[i].goalName = name;\n          updatedGoal[i].goalAttribute = attr;\n\n          setState({\n            goalKey: updatedGoal,\n          });\n        }\n      }\n      ////////GOAL TYPE DOES NOT REAMIN THE SAME////////\n      if (!foundGoal) {\n        //MOVE THIS helper\n        const findGoal = (goalType) => {\n          for (let i = 0; i < state[goalType].length; i++) {\n            if (state[goalType][i].goalId === id) {\n              foundGoal = true;\n              //REMOVE goal from old goalType list.\n              let oldGoalArr = [...state[goalType]];\n              const removedGoal = oldGoalArr.splice(i, 1)[0];\n              //ADD goal to appropriate goalType list.\n              let newGoalArr = [removedGoal, ...state[goalKey]];\n              setState({\n                [goalType]: oldGoalArr,\n                [goalKey]: newGoalArr,\n              });\n            }\n          }\n        };\n\n        const goaltypes = [\"dailyGoals\", \"missionGoals\", \"questGoals\"];\n        //determine two options that are not goaltype\n        const checkTypes = goaltypes.filter((goalName) => goalName !== goalKey);\n        for (const type of checkTypes) {\n          findGoal(type);\n        }\n      }\n    });\n  }\n\n  function deleteGoal({ goalId, goalType }) {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/db/delete-goal\",\n      headers: { \"content-type\": \"application/json\" },\n      data: JSON.stringify({ goalId: goalId }),\n    });\n\n    const goalKey = `${goalType}Goals`;\n\n    //remove deleted goal from goal array in state and update state with new array.\n    const updatedGoalArr = [...state[goalKey]].filter(\n      (goal) => goal.goalId !== goalId\n    );\n\n    setState({\n      [goalKey]: updatedGoalArr,\n    });\n  }\n\n  function updateUserStats(data) {\n    //data = {goalId, goalType}\n    const goalKey = `${data.goalType.toLowerCase()}Goals`;\n\n    let attributesToIncrement = [];\n    for (const goal of state[goalKey]) {\n      if (goal.goalId === data.goalId) {\n        attributesToIncrement = goal.goalAttribute;\n      }\n    }\n\n    const updateData = {\n      userId: state.userId,\n      Exp: state.userExp + 10,\n      Strength: state.userStrength,\n      Vitality: state.userVitality,\n      Knowledge: state.userKnowledge,\n      Social: state.userSocial,\n      Willpower: state.userWillpower,\n    };\n    //iterate through array and append value to obj w/ current val\n    for (const el of attributesToIncrement) {\n      //Format attr as updateData key (capitalize first letter ex. knowledge -> Knowledge)\n      const key = el.charAt(0).toUpperCase() + el.slice(1);\n      //increment only the attributes associated with the goal\n      updateData[key] += 5;\n    }\n\n    axios({\n      method: \"put\",\n      url: \"http://localhost:5000/db/update-user-stats\",\n      headers: { \"content-type\": \"application/json\" },\n      data: JSON.stringify(updateData),\n    }).then((res) => {\n      // console.log(res);\n\n      //Update state to match db.\n      setState({\n        userExp: updateData.Exp,\n        userStrength: updateData.Strength,\n        userVitality: updateData.Vitality,\n        userKnowledge: updateData.Knowledge,\n        userSocial: updateData.Social,\n        userWillpower: updateData.Willpower,\n      });\n    });\n  }\n\n  function updateLogin() {\n    console.log(`hit updateLogin`);\n    const billyId = \"614de5c4646237d2b991f65c\";\n\n    setState({\n      userId: billyId,\n    });\n  }\n\n  return {\n    state,\n    shuffleQuote,\n    createGoal,\n    updateGoalStatus,\n    updateGoal,\n    deleteGoal,\n    updateUserStats,\n    updateLogin,\n  };\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport useData from \"./../hooks/useData\";\nimport \"./GoalsListItem.scss\";\n\nexport default function GoalUpdate({ goalId, goalType, reCollapse }) {\n  //This is for updating the goal name\n  const [goal, setGoal] = useState(\"\");\n\n  const { updateGoal, deleteGoal } = useData();\n\n  const formEl = useRef(null);\n  useEffect(() => {\n    formEl.current.querySelectorAll(\"[data-rpgui]\").forEach((el) => {\n      if (window.RPGUI) {\n        const type = el.dataset.rpgui;\n        window.RPGUI.create(el, type);\n      }\n    });\n  }, []);\n\n  const handleDeleteClick = (event) => {\n    event.preventDefault();\n    deleteGoal({ goalId, goalType });\n    //See parent component - this closes \"edit mode\"\n    reCollapse(false);\n  };\n\n  const handleEditClick = (event) => {\n    event.preventDefault();\n    let updateInformation = {\n      goalId,\n      goalName: event.target[0].value,\n      goalType: event.target[1].value,\n      Strength: event.target[2].checked,\n      Vitality: event.target[3].checked,\n      Knowledge: event.target[4].checked,\n      Social: event.target[5].checked,\n      Willpower: event.target[6].checked,\n    };\n\n    updateGoal(updateInformation);\n    //See parent component - this closes \"edit mode\"\n    reCollapse(false);\n  };\n\n  return (\n    <form onSubmit={handleEditClick} ref={formEl}>\n      <div className='rpgui-container framed-grey'>\n        <label>Update Goal:</label>\n        <input\n          type='text'\n          name='goal'\n          value={goal}\n          autoComplete='off'\n          onChange={(e) => setGoal(e.target.value)}\n          maxLength='30'\n        />\n        <br />\n        <br />\n        <label>Update the type:</label>\n        <select\n          className='rpgui-dropdown'\n          name='goal-type'\n          data-rpgui='dropdown'\n        >\n          <option value='Daily'>Daily Task</option>\n          <option value='Mission'>Mission</option>\n          <option value='Quest'>Quest</option>\n        </select>\n        <input\n          className='rpgui-checkbox golden'\n          type='checkbox'\n          value='1'\n          name='strength'\n          data-rpgui='checkbox'\n        />\n        <label>STR&nbsp;</label>\n        <input\n          className='rpgui-checkbox golden'\n          type='checkbox'\n          value='1'\n          name='vitality'\n          data-rpgui='checkbox'\n        />\n        <label>VIT&nbsp;</label>\n        <input\n          className='rpgui-checkbox golden'\n          type='checkbox'\n          value='1'\n          name='knowledge'\n          data-rpgui='checkbox'\n        />\n        <label>KNO&nbsp;</label>\n        <input\n          className='rpgui-checkbox golden'\n          type='checkbox'\n          value='1'\n          name='social'\n          data-rpgui='checkbox'\n        />\n        <label>SOC&nbsp;</label>\n        <input\n          className='rpgui-checkbox golden'\n          type='checkbox'\n          value='1'\n          name='willpower'\n          data-rpgui='checkbox'\n        />\n        <label>WIL</label>\n        <br />\n        <br />\n        <div className='rpgui-center'>\n          <button className='rpgui-button' type='submit'>\n            <p className='button-text'>Update</p>\n          </button>\n          <button className='rpgui-button' onClick={handleDeleteClick}>\n            <p className='button-text'>Delete</p>\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./GoalsListItem.scss\";\nimport GoalUpdate from \"./GoalUpdate\";\nimport useData from \"./../hooks/useData\";\nimport Collapse from \"react-bootstrap/Collapse\";\n\nexport default function GoalsListItem({\n  goalId,\n  status,\n  title,\n  goalType,\n  goalDescription,\n}) {\n  const [open, setOpen] = useState(false);\n  const { updateGoalStatus, updateUserStats } = useData();\n\n  const handleStatusClick = () => {\n    updateGoalStatus({\n      goalType: goalType,\n      goalId: goalId,\n      status: status,\n    });\n    //Set points to attr and exp on update from \"in progress\" to \"complete\"\n\n    if (status === \"in progress\") {\n      updateUserStats({\n        goalType: goalType,\n        goalId: goalId,\n      });\n    }\n  };\n\n  let statusIcon = \"\";\n  let completedGoal = \"\";\n  if (status === \"complete\") {\n    statusIcon = <i className=\"nes-icon star\"></i>;\n    completedGoal = \n    <p className=\"goals-title-name tooltip\" style={{\n      textDecoration: `line-through`, \n      textDecorationThickness: `3px`, \n      textDecorationColor: `#383838`}}>\n      {title}\n      <div class=\"tooltiptext nes-balloon\">\n        <p className=\"tooltip-text-hover\">{goalDescription}</p>\n      </div>\n    </p>\n  } else if (status === \"incomplete\") {\n    statusIcon = <i className='nes-icon star is-empty'></i>;\n    completedGoal = \n    <p className=\"goals-title-name tooltip\">\n      {title}\n      <div class=\"tooltiptext nes-balloon\">\n        <p className=\"tooltip-text-hover\">{goalDescription}</p>\n      </div>\n    </p>\n  } else if (status === \"in progress\") {\n    statusIcon = <i className='nes-icon star is-half'></i>;\n    completedGoal = \n    <p className=\"goals-title-name tooltip\">\n      {title}\n      <div class=\"tooltiptext nes-balloon\">\n        <p className=\"tooltip-text-hover\">{goalDescription}</p>\n      </div>\n    </p>\n  }\n\n  return (\n    <>\n      <li className='goal-entry'>\n        <button onClick={handleStatusClick} className='goals-status-name'>\n          {statusIcon}\n        </button>\n          {completedGoal}\n          \n        <div\n          className='rpgui-icon sword edit-button'\n          onClick={() => setOpen(!open)}\n        ></div>\n      </li>\n\n      <Collapse in={open}>\n        <div>\n          <GoalUpdate \n          goalId={goalId}\n          goalType={goalType}\n          reCollapse={setOpen}\n          />\n        </div>\n      </Collapse>\n    </>\n  );\n}\n","import React from \"react\";\nimport { NavItem } from \"react-bootstrap\";\nimport \"./GoalsList.scss\";\nimport GoalsListItem from \"./GoalsListItem\";\n\nexport default function GoalsList(props) {\n\n  //Ternary prevents 'map of' error\n  //Will display no components if no goals available\n  const goalList = props.goals !== -1 ?\n  props.goals.map((goal) => {\n    return (\n        <GoalsListItem\n          key={goal.goalId}\n          goalType={props.headerName.toLowerCase()}\n          goalId={goal.goalId}\n          title={goal.goalName}\n          goalDescription={goal.goalDescription}\n          status={goal.status}\n        />\n    );\n  }): null\n\n\n  return (\n    <article className=\"goals rpgui-container framed-golden-2\">\n      <h2>{props.headerName}</h2>\n      {goalList}\n    </article>\n  );\n}\n","import React from \"react\";\nimport \"./Goals.scss\";\nimport GoalsList from \"./GoalsList\";\n\nexport default function Goals(props) {\n  return (\n    <main id=\"main-container\" className=\"rpgui-content\">\n      <section className=\"goals-box rpgui-container framed-golden\">\n        <GoalsList headerName={\"Daily\"} goals={props.dailyGoals} />\n        <GoalsList headerName={\"Mission\"} goals={props.missionGoals} /> \n        <GoalsList headerName={\"Quest\"} goals={props.questGoals} />\n      </section>\n    </main>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport useData from \"../hooks/useData\";\nimport \"./rpgui.css\";\nimport \"./Modal.scss\";\n\nexport default function GamifyModal(props) {\n  const [goal, setGoal] = useState(\"\");\n  const formEl = useRef(null);\n  \n  //Rename state === lot of changes. Group talk. (App.js, dbCreateGoal.js,useData.js)\n  const { state, createGoal } = useData();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let formData = {\n      userId: state.userId,\n      goalName: event.target[0].value,\n      goalDescription: event.target[1].value,\n      goalType: event.target[2].value,\n      Strength: event.target[3].checked,\n      Vitality: event.target[4].checked,\n      Knowledge: event.target[5].checked,\n      Social: event.target[6].checked,\n      Willpower: event.target[7].checked,\n    };\n    createGoal(formData);\n  };\n\n  useEffect(() => {\n    formEl.current.querySelectorAll(\"[data-rpgui]\").forEach((el) => {\n      if (window.RPGUI) {\n        const type = el.dataset.rpgui;\n        window.RPGUI.create(el, type);\n      }\n    });\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit} ref={formEl}>\n      <div className='Modal'>\n        <div className='rpgui-content'>\n          <div className='rpgui-container framed add-goal-modal'>\n\n            <div className=\"modal-header\">\n              <h1 class='modal-header-title'>Next Goal</h1>\n              <img src=\"https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/c528c0230281065.png\" className=\"close-button\" onClick={props.handleClose} alt=\"\"/>\n            </div>\n            <hr />\n            <label>Goal (Limit of 30 characters):</label>\n            <input\n              type='text'\n              name='goal'\n              value={goal}\n              autoComplete='off'\n              onChange={(e) => setGoal(e.target.value)}\n              maxLength='30'\n            />\n            <br />\n            <br />\n            <textarea\n              name='description'\n              rows='4'\n              cols='50'\n              placeholder='Goal Description'\n            ></textarea>\n            <br />\n            <br />\n            <label>Select the type:</label>\n            <select\n              className='rpgui-dropdown'\n              name='goal-type'\n              data-rpgui='dropdown'\n            >\n              <option value='Daily'>Daily Task</option>\n              <option value='Mission'>Mission</option>\n              <option value='Quest'>Quest</option>\n            </select>\n            <input\n              className='rpgui-checkbox golden'\n              type='checkbox'\n              value='1'\n              name='strength'\n              data-rpgui='checkbox'\n            />\n            <label>STR&nbsp;</label>\n            <input\n              className='rpgui-checkbox golden'\n              type='checkbox'\n              value='1'\n              name='vitality'\n              data-rpgui='checkbox'\n            />\n            <label>VIT&nbsp;</label>\n            <input\n              className='rpgui-checkbox golden'\n              type='checkbox'\n              value='1'\n              name='knowledge'\n              data-rpgui='checkbox'\n            />\n            <label>KNO&nbsp;</label>\n            <input\n              className='rpgui-checkbox golden'\n              type='checkbox'\n              value='1'\n              name='social'\n              data-rpgui='checkbox'\n            />\n            <label>SOC&nbsp;</label>\n            <input\n              className='rpgui-checkbox golden'\n              type='checkbox'\n              value='1'\n              name='willpower'\n              data-rpgui='checkbox'\n            />\n            <label>WIL</label>\n            <br />\n            <br />\n            <div className='rpgui-center'>\n              <button\n                className='rpgui-button'\n                type='submit'\n                onClick={props.handleClose}\n              >\n                <p className='button-text'>Enter</p>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport GamifyModal from \"./GamifyModal\";\nimport './Nav.scss'\nimport \"./rpgui.css\";\n\nexport default function Nav() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <article id=\"nav-bar\">\n      <button onClick={handleShow} className=\"new-goal-button\">\n        <img src=\"https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/88c2a3fcf8ce72e.png\" className=\"exclamation\" alt=\"\" />\n      </button>\n      <Modal show={show} >\n        <GamifyModal handleClose={handleClose} />\n      </Modal>\n    </article>\n  );\n}","import React from \"react\";\nimport useData from \"../hooks/useData\";\nimport \"./SkillBarList.scss\";\nimport \"./rpgui.css\";\n\nexport default function SkillBarList() {\n  const { state } = useData();\n  const strengthVal = state.userStrength % 100;\n  const strengthLvl = Math.floor(state.userStrength / 100);\n\n  const vitalityVal = state.userVitality % 100;\n  const vitalityLvl = Math.floor(state.userVitality / 100);\n\n  const knowledgeVal = state.userKnowledge % 100;\n  const knowledgeLvl = Math.floor(state.userKnowledge / 100);\n\n  const socialVal = state.userSocial % 100;\n  const socialLvl = Math.floor(state.userSocial / 100);\n\n  const willpowerVal = state.userWillpower % 100;\n  const willpowerLvl = Math.floor(state.userWillpower / 100);\n\n\n  return (\n    <div className=\"rpgui-container framed-golden skills-bar\">\n      <div className=\"rpgui-content\">\n        <div id=\"progress\" className=\"rpgui-container experience-bar\">\n          <div>\n\n            <div id=\"hp-bar\" data-value=\"0.4\" className=\"rpgui-progress bar\" data-rpguitype=\"progress\">\n              <div className=\"skill-attribute-name\">\n                Strength\n                <span>x{strengthLvl}<div className=\"rpgui-icon sword strength-icon\"></div></span>\n              </div>\n\n              <div className=\" rpgui-progress-track\">\n                <div className=\"rpgui-progress-fill user-progress-line\">\n                  <span\n                    className=\"attributes user-str\"\n                    style={{ width: `${strengthVal}%` }}\n                  ></span>\n                </div>\n              </div>\n              <div className=\" rpgui-progress-left-edge\"></div>\n              <div className=\" rpgui-progress-right-edge\"></div>\n            </div>\n\n            <div data-value=\"0.4\" className=\"rpgui-progress bar\" data-rpguitype=\"progress\">\n              <div className=\"skill-attribute-name\">\n                Vitality\n                <span>x{vitalityLvl}<i class=\"nes-icon is-small heart\"></i></span>\n              </div>\n\n              <div className=\" rpgui-progress-track\">\n                <div className=\"rpgui-progress-fill user-progress-line\">\n                  <span\n                    className=\"attributes user-vit\"\n                    style={{ width: `${vitalityVal}%` }}\n                  ></span>\n                </div>\n              </div>\n              <div className=\" rpgui-progress-left-edge\"></div>\n              <div className=\" rpgui-progress-right-edge\"></div>\n            </div>\n\n            <div id=\"hp-bar\" data-value=\"0.4\" className=\"rpgui-progress bar\" data-rpguitype=\"progress\">\n              <div className=\"skill-attribute-name\">\n                Knowledge\n                <span>x{knowledgeLvl}<div className=\"rpgui-icon potion-green knowledge-icon\"></div></span>\n              </div>\n\n              <div className=\" rpgui-progress-track\">\n                <div className=\"rpgui-progress-fill user-progress-line\">\n                  <span\n                    className=\"attributes user-kno\"\n                    style={{ width: `${knowledgeVal}%` }}\n                  ></span>\n                </div>\n              </div>\n              <div className=\" rpgui-progress-left-edge\"></div>\n              <div className=\" rpgui-progress-right-edge\"></div>\n            </div>\n\n            <div id=\"hp-bar\" data-value=\"0.4\" className=\"rpgui-progress bar\" data-rpguitype=\"progress\">\n              <div className=\"skill-attribute-name\">\n                Social\n                <span>x{socialLvl}<i class=\"nes-icon coin is-small\"></i></span>\n              </div>\n\n              <div className=\" rpgui-progress-track\">\n                <div className=\"rpgui-progress-fill user-progress-line\">\n                  <span\n                    className=\"attributes user-soc\"\n                    style={{ width: `${socialVal}%` }}\n                  ></span>\n                </div>\n              </div>\n              <div className=\" rpgui-progress-left-edge\"></div>\n              <div className=\" rpgui-progress-right-edge\"></div>\n            </div>\n\n\n            <div id=\"hp-bar\" data-value=\"0.4\" className=\"rpgui-progress bar\" data-rpguitype=\"progress\">\n              <div className=\"skill-attribute-name\">\n                Willpower\n                <span>x{willpowerLvl}<div className=\"rpgui-icon shield willpower-icon\"></div></span>\n              </div>\n\n              <div className=\" rpgui-progress-track\">\n                <div className=\"rpgui-progress-fill user-progress-line\">\n                  <span\n                    className=\"attributes user-wil\"\n                    style={{ width: `${willpowerVal}%` }}\n                  ></span>\n                </div>\n              </div>\n              <div className=\" rpgui-progress-left-edge\"></div>\n              <div className=\" rpgui-progress-right-edge\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport './SidePanel.scss'\nimport './rpgui.css'\nimport SkillBarList from \"./SkillBarList\";\n\nexport default function SidePanel() {\n  return (\n    <>\n      <input type=\"checkbox\" />\n      <div className=\"burgerlines\">\n        <span className=\"lines line1\"></span>\n        <span className=\"lines line2\"></span>\n        <span className=\"lines line3\"></span>\n      </div>\n      <div className=\"skills menu-items rpgui-content\">\n        <a href=\"/\" className=\"logout-link\">Log Out</a>\n        <SkillBarList />\n      </div>\n    </>\n  );\n};","import { useState } from \"react\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./Quotes.scss\";\n\nexport default function Quotes(props) {\n  const [open, setOpen] = useState(false);\n  let { quote, shuffleQuote } = props;\n  return (\n    <article id='quotes-bar'>\n      <button onClick={() => setOpen(!open)} className='new-goal-button'>\n      <i className='nes-octocat familiar animate'></i>\n      </button>\n      <div style={{ minHeight: \"150px\" }}>\n        <Collapse in={open} dimension='width'>\n          <div id='example-collapse-text'>\n            <Card body style={{ width: \"450px\" }} className='card-body-quote'>\n              <div className='nes-balloon quote from-left'>\n                <blockquote>\n                  <img\n                    src='https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/cda4060eb29c5b0.png'\n                    className='quote-shuffle-button'\n                    alt='Small arrow'\n                    onClick={shuffleQuote}\n                  />\n                  &ldquo;\n                  {quote.q ? quote.q : quote.quote}\n                  &rdquo; &mdash;\n                  <footer>{quote.a ? quote.a : \"Kanye West\"}</footer>\n                </blockquote>\n              </div>\n            </Card>\n          </div>\n        </Collapse>\n      </div>\n    </article>\n  );\n}\n","import React from \"react\";\nimport './User.scss'\nimport \"./rpgui.css\";\n\nexport default function GamifyUser(props) {\n  const displayExp = props.exp % 100;\n  const displayLvl = Math.floor(props.exp / 100);\n  return (\n    <div id=\"user-bar\" className=\"rpgui-content\">\n      <div className=\"rpgui-container framed user-bar\">\n        <div className=\"avatar\">\n          <div className=\"hexTop\"></div>\n          <div className=\"hexBottom\"></div>\n        </div>\n        <div className=\"user\">\n          <div className=\"user-info\">\n            <h1 className=\"username\">Chubby_Bunny</h1>\n            <h2 className=\"user-level\">LVL {displayLvl}</h2>\n          </div>\n          <div className=\"rpgui-content\">\n            <div id=\"progress\" className=\"rpgui-container experience-bar\">\n              <div>\n                <div id=\"hp-bar\" data-value=\"0.4\" className=\"rpgui-progress red bar\" data-rpguitype=\"progress\">\n                  <div className=\" rpgui-progress-track\">\n                    <div className=\"rpgui-progress-fill red user-progress-line\">\n                      <span className=\"user-exp\" style={{width: `${displayExp}%`}}></span></div>\n                  </div>\n                  <div className=\" rpgui-progress-left-edge\"></div>\n                  <div className=\" rpgui-progress-right-edge\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","import React from \"react\";\nimport \"./Header.scss\";\nimport Nav from \"./Nav\";\nimport SidePanel from \"./SidePanel\";\nimport Quotes from \"./Quotes\";\nimport GamifyUser from \"./GamifyUser\";\nimport useData from \"../hooks/useData\";\n\nexport default function Header() {\n  const { state, shuffleQuote } = useData();\n  return (\n    <header>\n      <section id='header-container'>\n        <article className='master-header'>\n          <GamifyUser exp={state.userExp} />\n          <div className=\"master-header-buttons\">\n            <Nav />\n            <Quotes quote={state.quote} shuffleQuote={shuffleQuote} />\n          </div>\n        </article>\n        <article className='burger'>\n        <SidePanel />\n        </article>\n      </section>\n   </header>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Form from \"react-bootstrap/Form\";\nimport useData from \"./../hooks/useData\";\n\nimport \"./Login.scss\";\nimport \"./rpgui.css\";\n\nexport default function GamifyLogin() {\n  const { state, updateLogin } = useData();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    updateLogin();\n  };\n\n  const validateForm = () => {\n    return email.length > 0 && password.length > 5;\n  };\n\n  return (\n    <>\n      <div className=\"demo\">\n        <div className=\"logo\">\n          <p className=\"hype\">Hype</p>\n          <p className=\"hub\">HUB</p>\n        </div>\n        <div className=\"body-text\">\n          <p className=\"text\">Start your journey?</p>\n          <Button\n            onClick={() => setOpen(!open)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open}\n            className=\"slide-down-arrow\"\n          >\n            <i className=\"icon-navi fas fa-angle-double-down\"></i>\n          </Button>\n          <Collapse in={open}>\n            <Form onSubmit={handleSubmit}>\n              <div className=\"Login\">\n                <div className=\"rpgui-content\">\n                  <div className=\"rpgui-container framed\">\n                    <h1>Log In</h1>\n                    <hr />\n                    <Form.Group size=\"lg\" controlId=\"email\">\n                      <Form.Label>E-mail</Form.Label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        autoComplete=\"off\"\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <br />\n                      <br />\n\n                      <Form.Label>Password</Form.Label>\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Form.Text id=\"passwordHelpBlock\" muted>\n                        Your password must be 6-20 characters long, contain\n                        letters and numbers, and must not contain spaces,\n                        special characters, or emoji.\n                      </Form.Text>\n                      <br />\n                      <br />\n                    </Form.Group>\n\n                    <div className=\"rpgui-center\">\n                      <button\n                        className=\"rpgui-button\"\n                        type=\"submit\"\n                        disabled={!validateForm()}\n                      >\n                        <p className=\"button-text\">\n                          Submit\n                        </p>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </Collapse>\n        </div>\n      </div>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./BattleTheme.scss\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nexport default function BattleTheme(props) {\n  console.log(\"BattleTheme props\", props);\n  const { setTheme, theme, token } = props;\n  const [uri, setUri] = useState([]);\n\n  // let uri = extractSpotifyUri(theme);\n  useEffect(() => {\n    async function getUri() {\n      const uri = await axios\n        .get(`http://localhost:5000/recs/${theme}`)\n        .then(({ data }) => data);\n      setUri(uri);\n      console.log(\"uri >>>\", uri);\n    }\n    getUri();\n  }, [theme]);\n  return (\n    <footer id='battle-theme' className='rpgui-container framed'>\n      <SpotifyPlayer\n        autoPlay={true}\n        token={token}\n        uris={uri}\n        play={true}\n        name={\"HypeHUB - Battletheme\"}\n        showSaveIcon={true}\n        initialVolume={0.3}\n        styles={{\n          bgColor: \"#4e4a4e\",\n          activeColor: \"#d27d2c\",\n          color: \"#fff\",\n          loaderColor: \"#fff\",\n          sliderColor: \"#854c30\",\n          trackArtistColor: \"#ccc\",\n          trackNameColor: \"#fff\",\n        }}\n      />\n      <button className='btn' type='button' onClick={() => setTheme(\"\")}>\n        Choose a different theme\n      </button>\n    </footer>\n  );\n}\n","import \"./SelectTheme.scss\";\nimport { useState } from \"react\";\nimport BattleTheme from \"./BattleTheme\";\n\nconst SelectTheme = (props) => {\n  const { token } = props;\n  const [theme, setTheme] = useState();\n  console.log(\"selectTheme props\", props);\n  console.log(\"selectTheme theme\", theme);\n\n  return (\n    <>\n      {!theme ? (\n        <footer id='select-theme'>\n          <div className='rpgui-container framed'>\n            <button\n              className='rpgui-button'\n              onClick={() => setTheme(\"knowledge\")}\n            >\n              <i className='fas fa-brain'></i>\n              Knowledge\n            </button>\n            <button className='rpgui-button' onClick={() => setTheme(\"social\")}>\n              <i className='fas fa-address-book'></i>\n              Social\n            </button>\n            <button\n              className='rpgui-button'\n              onClick={() => setTheme(\"strength\")}\n            >\n              <i className='fas fa-dumbbell'></i>\n              Strength\n            </button>\n            <button\n              className='rpgui-button'\n              onClick={() => setTheme(\"vitality\")}\n            >\n              <i className='fas fa-heartbeat'></i>\n              Vitality\n            </button>\n            <button\n              className='rpgui-button'\n              onClick={() => setTheme(\"willpower\")}\n            >\n              <i className='fas fa-fist-raised'></i>\n              Willpower\n            </button>\n          </div>\n        </footer>\n      ) : (\n        <BattleTheme theme={theme} token={token} setTheme={setTheme} />\n      )}\n    </>\n  );\n};\n\nexport default SelectTheme;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.scss\";\nimport SpotifyAuth from \"./components/SpotifyAuth\";\nimport Goals from \"./components/Goals\";\nimport Header from \"./components/Header\";\nimport GamifyLogin from \"./components/GamifyLogin\";\nimport useData from \"./hooks/useData\";\nimport SelectTheme from \"./components/SelectTheme\";\n\nfunction App() {\n  const { state } = useData();\n\n  return (\n    <>\n      {!state.userId ? (\n        <GamifyLogin />\n        ) : (\n          <div id=\"overall-body\">\n             <Header />\n              <Goals\n                dailyGoals={state.dailyGoals}\n                missionGoals={state.missionGoals}\n                questGoals={state.questGoals}\n                />\n            {state.token ? <SelectTheme token={state.token} /> : <SpotifyAuth />}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport GamifyLogin from './components/GamifyLogin';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/login\" component={GamifyLogin} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}